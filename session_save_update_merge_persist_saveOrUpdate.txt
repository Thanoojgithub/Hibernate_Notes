session1 = sessionFactory.openSession();
tx1 = session1.beginTransaction();
SQLQuery createSQLQuery = session1.createSQLQuery("delete from mydb.employee");-------------------------------------------------------------------------------
createSQLQuery.executeUpdate();
Employee employee = new Employee("ram");1. SAVE
Serializable eId = session1.save(employee);emp.seteName("sriram");
/*session2.save(emp);
 * here, name modification is in same session context, so it will call update operation on same entity instance.
 */Hibernate: select nextval ('employeeIdGen')
employee.seteName("rajaram");Hibernate: /* insert com.hibernate.SassionSaveUpdateMergePersistVersion.pojo.Employee */ insert into mydb.employee (eName, EID) values (?, ?)
//Serializable eId = session1.save(employee);Hibernate: /* update com.hibernate.SassionSaveUpdateMergePersistVersion.pojo.Employee */ update mydb.employee set eName=? where EID=?
Employee emp = (Employee)session1.get(Employee.class, eId);Hibernate: select nextval ('employeeIdGen')
tx1.commit();Hibernate: /* insert com.hibernate.SassionSaveUpdateMergePersistVersion.pojo.Employee */ insert into mydb.employee (eName, EID) values (?, ?)
session1.close();Hibernate: /* from employee */ select employee0_.EID as EID1_0_, employee0_.eName as eName2_0_ from mydb.employee employee0_
session2 = sessionFactory.openSession();17-08-2015 01:47:55 2653 [main] INFO  c.h.S.app.App - Emp : Employee [eId=27, eName=rajaram, ver=1] 
tx2 = session2.beginTransaction();17-08-2015 01:47:55 2654 [main] INFO  c.h.S.app.App - Emp : Employee [eId=28, eName=sriram, ver=1]
employee.seteName("sriram");--------------
/*2. MERGE
 * save() will call a insert operation to insert same instance as new record in DB.emp.seteName("sriram");
 */session2.merge(emp);
//session2.save(emp);
/*Hibernate: select nextval ('employeeIdGen')
 * merge() will call a update operation to update same instance in DB.Hibernate: /* insert com.hibernate.SassionSaveUpdateMergePersistVersion.pojo.Employee */ insert into mydb.employee (eName, EID) values (?, ?)
 */Hibernate: /* update com.hibernate.SassionSaveUpdateMergePersistVersion.pojo.Employee */ update mydb.employee set eName=? where EID=?
Object merge = session2.merge(emp);Hibernate: /* load com.hibernate.SassionSaveUpdateMergePersistVersion.pojo.Employee */ select employee0_.EID as EID1_0_0_, employee0_.eName as eName2_0_0_ from mydb.employee employee0_ where employee0_.EID=?
tx2.commit();Hibernate: /* update com.hibernate.SassionSaveUpdateMergePersistVersion.pojo.Employee */ update mydb.employee set eName=? where EID=?
session2.close();Hibernate: /* from employee */ select employee0_.EID as EID1_0_, employee0_.eName as eName2_0_ from mydb.employee employee0_
session3 = sessionFactory.openSession();17-08-2015 01:47:01 2950 [main] INFO  c.h.S.app.App - Emp : Employee [eId=26, eName=sriram, ver=2] 
Query query = session3.createQuery("from employee");
@SuppressWarnings("unchecked")
List<Employee> employees = (List<Employee>)query.list();
for (Employee empTemp : employees) {
	logger.info("Emp : "+empTemp);
}
session3.close();